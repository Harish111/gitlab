{"ast":null,"code":"var _jsxFileName = \"/Users/harishgurram/Documents/React Projects/my-blog/src/pages/ArticlePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/articlesList';\nimport NotFoundPage from './NotFoundPage';\nimport articles from './article-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ArticlesPage = ({\n  match\n}) => {\n  _s();\n\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    setArticleInfo({\n      upvotes: 3\n    });\n  });\n  if (!article) return /*#__PURE__*/_jsxDEV(NotFoundPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 25\n  }, this);\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This post has been upvoted \", articleInfo.upvotes, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), article.content.map((paragraph, key) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: paragraph\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Other Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArticlesList, {\n      articles: otherArticles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ArticlesPage, \"YZr1gvERTtYwqzg1woK8g0o0spg=\");\n\n_c = ArticlesPage;\nexport default ArticlesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticlesPage\");","map":{"version":3,"sources":["/Users/harishgurram/Documents/React Projects/my-blog/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","articleContent","ArticlesList","NotFoundPage","articles","ArticlesPage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAEhC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGR,cAAc,CAACS,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAhD,CAAhB;AACA,QAAO,CAACI,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC;AAACc,IAAAA,OAAO,EAAE,CAAV;AAAaC,IAAAA,QAAQ,EAAG;AAAxB,GAAD,CAA/C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAG;AAAZ,KAAD,CAAd;AACH,GAFQ,CAAT;AAIA,MAAG,CAACJ,OAAJ,EAAa,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,QAAMM,aAAa,GAAGd,cAAc,CAACe,MAAf,CAAsBP,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAtB;AAEA,sBACI;AAAA,4BACA;AAAA,gBAAKE,OAAO,CAACQ;AAAb;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gDAA+BN,WAAW,CAACE,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAGEJ,OAAO,CAACS,OAAR,CAAgBC,GAAhB,CAAqB,CAACC,SAAD,EAAWC,GAAX,kBACnB;AAAA,gBAAeD;AAAf,OAAQC,GAAR;AAAA;AAAA;AAAA;AAAA,YADF,CAHF,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEN;AAAxB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH,CAzBD;;GAAMV,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport articleContent from './article-content'\nimport ArticlesList from '../components/articlesList'\nimport NotFoundPage from './NotFoundPage'\nimport articles from './article-content';\n\nconst ArticlesPage = ({ match }) => {\n    \n    const name = match.params.name;\n    const article = articleContent.find(article => article.name === name);\n    const  [articleInfo, setArticleInfo] = useState({upvotes: 0, comments : []});\n\n    useEffect(() => {\n        setArticleInfo({ upvotes : 3});\n    })\n\n    if(!article) return <NotFoundPage/>\n\n    const otherArticles = articleContent.filter(article => article.name !== name);\n\n    return (\n        <>\n        <h1>{article.title}</h1>\n        <p>This post has been upvoted {articleInfo.upvotes} times</p>\n        { article.content.map( (paragraph,key) =>\n            <p key={key}>{ paragraph }</p>) }\n\n            <h3>Other Articles</h3>\n            <ArticlesList articles={otherArticles}/>\n        </>\n    )\n}\n\nexport default ArticlesPage;"]},"metadata":{},"sourceType":"module"}